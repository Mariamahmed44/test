name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 21]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Start Xvfb (Virtual Display)
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 3
        
    - name: Validate Maven project
      run: mvn validate
      
    - name: Compile project
      run: mvn clean compile
      
    - name: Run tests
      run: |
        export DISPLAY=:99
        mvn test -Dmaven.test.failure.ignore=true
      env:
        HEADLESS: true
        
    - name: Generate test report
      if: always()
      run: |
        echo "Test execution completed"
        ls -la src/test/java/utils/reports/ || echo "Reports directory not found"
        
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-java${{ matrix.java-version }}
        path: |
          src/test/java/utils/reports/
          target/surefire-reports/
          target/screenshots/
        retention-days: 30
        
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: failure-screenshots-java${{ matrix.java-version }}
        path: target/screenshots/
        retention-days: 7
        
    - name: Publish test results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Test Results (Java ${{ matrix.java-version }})
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
        
  quality-check:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run code analysis
      run: |
        echo "Running code quality checks..."
        mvn verify -DskipTests=true
        
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        TODO_COUNT=$(grep -r "TODO\|FIXME" src/ --include="*.java" | wc -l || echo "0")
        echo "Found $TODO_COUNT TODO/FIXME comments"
        if [ "$TODO_COUNT" -gt 10 ]; then
          echo "::warning::High number of TODO/FIXME comments found: $TODO_COUNT"
        fi
        
  notification:
    runs-on: ubuntu-latest
    needs: [test, quality-check]
    if: always() && (needs.test.result == 'failure' || needs.quality-check.result == 'failure')
    
    steps:
    - name: Send failure notification
      run: |
        echo "Pipeline failed - sending notification"
        echo "Test Result: ${{ needs.test.result }}"
        echo "Quality Check Result: ${{ needs.quality-check.result }}"
        # Add your notification logic here (Slack, Teams, etc.)
        
  summary:
    runs-on: ubuntu-latest
    needs: [test, quality-check]
    if: always()
    
    steps:
    - name: Pipeline Summary
      run: |
        echo "## Pipeline Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Result**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Quality Check Result**: ${{ needs.quality-check.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
