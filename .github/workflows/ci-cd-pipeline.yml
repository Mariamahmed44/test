name: Konecta Selenium Test Suite CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - regression
          - user_registration
          - product_filtering
          - cart_operations
          - purchase_flow
          - popular_items

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome]
        # You can add firefox, edge later if needed
        # browser: [chrome, firefox, edge]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install Chrome browser
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
    
    - name: Install dependencies
      run: mvn clean compile
    

    - name: Run Purchase Flow Tests
      if: github.event.inputs.test_suite == 'purchase_flow'
      run: mvn test -Dtest="CompletePurchaseTest,*Purchase*Test,*Checkout*Test,*Payment*Test"
    
   
    
    - name: Generate Test Report
      if: always()
      run: |
        echo "Test execution completed"
        ls -la target/
        if [ -d "target/surefire-reports" ]; then
          echo "Surefire reports found"
          ls -la target/surefire-reports/
        fi
    
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.browser }}
        path: |
          target/surefire-reports/
          src/test/java/utils/reports/UI_test_report.html
          target/site/
        retention-days: 30
    
    - name: Upload Screenshots on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.browser }}
        path: |
          screenshots/
          target/screenshots/
        retention-days: 7
    
    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: 'Test Results (${{ matrix.browser }})'
        path: 'target/surefire-reports/TEST-*.xml'
        reporter: 'java-junit'
        fail-on-error: 'false'

  # Parallel execution for different test categories
  smoke-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: Run Smoke Tests
      run: |
        mvn clean test -Dtest="*Login*Test,*HomePage*Test" \
        -Dmaven.test.failure.ignore=true

  # Security and code quality checks
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Run Maven Checkstyle
      run: mvn checkstyle:check || true
    
    - name: Run Maven Spotbugs
      run: mvn spotbugs:check || true

  # Notification step
  notify:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    
    steps:
    - name: Notify on Success
      if: needs.test.result == 'success'
      run: |
        echo "✅ All tests passed successfully!"
        echo "Test suite execution completed on $(date)"
    
    - name: Notify on Failure
      if: needs.test.result == 'failure'
      run: |
        echo "❌ Some tests failed!"
        echo "Please check the test reports for details."
        echo "Failed at: $(date)"

# Environment variables
env:
  MAVEN_OPTS: "-Xmx1024m"
  # Add any environment-specific variables here
  # TEST_ENV: "ci"
  # HEADLESS: "true"
